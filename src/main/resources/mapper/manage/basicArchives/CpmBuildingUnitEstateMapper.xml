<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.api.manage.dao.basicArchives.CpmBuildingUnitEstateDao">
    <select id="list" parameterType="com.api.model.basicArchives.SearchCpmBuildingUnitEstate" resultType="com.api.vo.basicArchives.VoCpmBuildingUnitEstate">
        select b.id,b.building_name,b.building_no,b.building_unit_no,b.room_number,b.status,b.type,b.construction_area,b.indoor_area,group_concat(b.user_resident_name) as user_resident_name,group_concat(b.user_resident_tel) as user_resident_tel
        from (
        select a.id,a.building_name,a.building_no,a.building_unit_no,a.room_number,a.status,a.type,a.construction_area,a.indoor_area,ur.name as user_resident_name,ur.tel as user_resident_tel
        from (
        select cbue.*, cbu.id as cbu_id, cbu.no as building_unit_no, cb.name as building_name,cb.no as building_no,cre.resident_id as resident_id
        from cpm_building_unit_estate cbue,cpm_building cb,cpm_building_unit cbu,cpm_resident_estate cre
        where cbue.building_unit_id = cbu.id and cbu.building_id = cb.id and cbue.id = cre.building_unit_estate_id
        ) as a LEFT JOIN user_resident ur
        on a.resident_id = ur.id
        ) as b
        <where>
            <if test="buildingNo != null and buildingNo != ''">
                and b.building_no like concat('%',#{buildingNo},'%')
            </if>
            <if test="unitNo != null">
                and b.building_unit_no like concat('%',#{unitNo},'%')
            </if>
            <if test="roomNumber != null and roomNumber != ''">
                and b.room_number like concat('%',#{roomNumber},'%')
            </if>
            <if test="status != null">
                and b.status = #{status}
            </if>
            <if test="residentName != null and residentName != ''">
                and b.user_resident_name like concat('%',#{residentName},'%')
            </if>
            <if test="residentTel != null and residentTel != ''">
                and b.user_resident_tel = #{residentTel}
            </if>
        </where>
        GROUP BY b.id
    </select>


    <insert id="insert" parameterType="com.api.model.basicArchives.CpmBuildingUnitEstate">
        insert into
        cpm_building_unit_estate(
            building_unit_id,
            room_number,
            status,
            type,
            construction_area,
            indoor_area,
            create_id,
            create_date,
            is_delete
        )
        values (
            #{buildingUnitId},
            #{roomNumber},
            #{status},
            #{type},
            #{constructionArea},
            #{indoorArea},
            #{createId},
            #{createDate},
            #{isDelete}
        )
        <selectKey keyProperty="id" resultType="java.lang.Integer">
            select LAST_INSERT_ID() AS id
        </selectKey>
    </insert>

    <select id="findById" parameterType="java.lang.Integer" resultType="com.api.model.basicArchives.CpmBuildingUnitEstate">
        select * from cpm_building_unit_estate
        where is_delete = 1 and id =#{id}
    </select>

    <update id="update" parameterType="com.api.model.basicArchives.CpmBuildingUnitEstate">
        update cpm_building_unit_estate
        <set>
            <if test="buildingUnitId != null">
                building_unit_id = #{buildingUnitId},
            </if>
            <if test="roomNumber != null and roomNumber != ''">
                room_number = #{roomNumber},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="constructionArea != null">
                construction_area = #{constructionArea},
            </if>
            <if test="indoorArea != null">
                indoor_area = #{indoorArea},
            </if>
            <if test="createId != null">
                create_id = #{createId},
            </if>
            <if test="createDate != null">
                create_date = #{createDate},
            </if>
            <if test="modifyId != null">
                modify_id = #{modifyId},
            </if>
            <if test="modifyDate != null">
                modify_date = #{modifyDate},
            </if>
        </set>
        where id =#{id}
    </update>

    <update id="delete" parameterType="java.lang.Integer">
        update cpm_building_unit_estate set is_delete = 0 where id = #{id}
    </update>

<!--    根据业主id查询房产信息-->
    <select id="findByResidentId" parameterType="java.lang.Integer" resultType="com.api.model.basicArchives.CpmBuildingUnitEstate">
        select cbue.id,cbue.building_unit_id,cbue.room_number from user_resident as ur,cpm_resident_estate as cre,cpm_building_unit_estate as cbue
		where ur.id = cre.resident_id and cbue.id =cre.building_unit_estate_id and ur.id =#{id} and ur.type =1
    </select>

<!--    查询所有的房产的id和name-->
    <select id="findAll" resultType="com.api.vo.basicArchives.VoFindAll">
        select id as value,room_number as label
        from cpm_building_unit_estate
        where is_delete =1
    </select>
    <!--    根据租客id查询房产信息-->
    <select id="findByTenantId" parameterType="java.lang.Integer" resultType="com.api.vo.basicArchives.VoTenantCpmBuildingUnitEstate">
        select cbue.id,cbue.building_unit_id,cbue.room_number,cre.effective_time_start,cre.effective_time_end
        from user_resident as ur,cpm_resident_estate as cre,cpm_building_unit_estate as cbue
		where ur.id = cre.resident_id and cbue.id =cre.building_unit_estate_id and ur.id =#{id} and ur.type =3
    </select>

    <select id="findByBuildingUnitId" parameterType="java.lang.Integer" resultType="com.api.vo.basicArchives.VoFindAll">
        select id as value,room_number as label
        from cpm_building_unit_estate
        where is_delete =1 and building_unit_id = #{id}
    </select>

    <select id="findByRoomNumber" parameterType="java.lang.String" resultType="com.api.model.basicArchives.CpmBuildingUnitEstate">
        select * from cpm_building_unit_estate
        where room_number =#{roomNumber}
    </select>

    <select id="findResidentIdByEstateId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select resident_id from cpm_resident_estate where building_unit_estate_id =#{id}
    </select>
</mapper>