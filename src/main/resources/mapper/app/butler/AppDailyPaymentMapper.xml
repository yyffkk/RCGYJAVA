<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.api.app.dao.butler.AppDailyPaymentDao">
    <select id="list" parameterType="java.lang.Integer" resultType="com.api.vo.app.AppDailyPaymentVo">
        select year(end_date) as years,count(*) as payment_num from sys_daily_payment where building_unit_estate_id = #{estateId} and status != 3 group by year(end_date) order by year(end_date) DESC
    </select>

    <select id="listType" parameterType="com.api.model.app.AppDailyPaymentDetail" resultType="com.api.vo.app.AppDailyPaymentTypeVo">
        select DISTINCT sctd.id,sctd.name from sys_daily_payment as sdp,sys_charges_template_detail as sctd
        where sdp.charges_template_detail_id = sctd.id and sdp.building_unit_estate_id = #{estateId} and year(sdp.end_date) = #{years} and sdp.status != 3
    </select>

    <select id="listDetailed" parameterType="com.api.model.app.AppDailyPaymentDetail" resultType="com.api.vo.app.AppDailyPaymentDetailedVo">
        select T.group_id,sum(T.payment_price) as payment_price from (
            select sdp.*,CEILING((MONTH(sdp.end_date)/7)) as group_id
            from sys_daily_payment as sdp
            where sdp.building_unit_estate_id = #{estateId} and sdp.charges_template_detail_id =#{chargesTemplateDetailId} and year(sdp.end_date) = #{years} and sdp.status != 3
        ) as T GROUP BY T.group_id order by T.group_id
    </select>

    <select id="listDetails" parameterType="com.api.model.app.AppDailyPaymentDetail" resultType="com.api.vo.app.AppDailyPaymentDetailsVo">
        select T.*,concat(year(T.end_date),"年",MONTH(T.end_date),"月") as month from (
            select sdp.*,CEILING((MONTH(sdp.end_date)/7)) as group_id,concat(sdp.unit_price,sdd.show_name) as unit_price_type
            from sys_daily_payment as sdp,sys_data_dictionary as sdd
            where sdp.building_unit_estate_id = #{estateId} and sdp.charges_template_detail_id =#{chargesTemplateDetailId} and year(sdp.end_date) = #{years} and sdp.status != 3
            and sdd.type_name = "sys_charges_template_detail_type" and sdd.show_value = sdp.type
        ) as T where T.group_id = #{groupId} order by MONTH(T.end_date)
    </select>

    <select id="findPaymentPriceById" parameterType="com.api.model.app.AppDailyPaymentOrder" resultType="java.math.BigDecimal">
        select sum(payment_price) from sys_daily_payment where id in
        <foreach collection="ids" open="(" close=")" separator="," item="id">
            #{id}
        </foreach>
    </select>

    <select id="findDailPaymentPriceById" parameterType="java.lang.Integer" resultType="java.math.BigDecimal">
        select payment_price from sys_daily_payment where id = #{id}
    </select>

    <insert id="insertOrder" parameterType="com.api.model.app.AppDailyPaymentOrder">
        insert into sys_daily_payment_order(
            code,
            name,
            tel,
            pay_type,
            pay_price,
            create_id,
            create_date,
            status
        ) values (
            #{code},
            #{name},
            #{tel},
            #{payType},
            #{payPrice},
            #{createId},
            #{createDate},
            #{status}
        )
        <selectKey keyProperty="id" resultType="java.lang.Integer">
            select LAST_INSERT_ID() AS id
        </selectKey>
    </insert>

    <insert id="insertOrderList" parameterType="com.api.model.chargeManagement.DailyPaymentOrderList">
        insert into sys_daily_payment_order_list(
            daily_payment_order_id,
            daily_payment_id,
            daily_payment_price
        )values (
            #{dailyPaymentOrderId},
            #{dailyPaymentId},
            #{dailyPaymentPrice}
        )
    </insert>

    <update id="updatePaidPriceAndPaymentPrice" parameterType="java.lang.Integer">
        update sys_daily_payment
        <set>
            paid_price = cost_price,
            payment_price = 0,
            status = 3
        </set>
        where id = #{id}
    </update>

    <select id="findEstateIsPayment" parameterType="java.lang.Integer" resultType="com.api.vo.app.AppDailPaymentChooseEstate">
        select cbue.id,concat(cb.no,"幢",cbu.no,"单元",cbue.room_number) as room_name,sum((case sdp.status is null when true then 0 else case sdp.status != 3 when true then 1 else 0 end end)) as status
        from cpm_resident_estate as cre,user_resident as ur,cpm_building as cb,cpm_building_unit as cbu,cpm_building_unit_estate as cbue
        LEFT JOIN sys_daily_payment as sdp
        on sdp.building_unit_estate_id = cbue.id
        where cre.resident_id = ur.id and cbue.id = cre.building_unit_estate_id and cbue.building_unit_id = cbu.id and cbu.building_id = cb.id and ur.id = #{id}
        GROUP BY cbue.id
    </select>

    <select id="findEstateIdByResidentId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select building_unit_estate_id from cpm_resident_estate where resident_id = #{id}
    </select>

    <select id="paymentRecord" parameterType="java.util.List" resultType="com.api.vo.app.AppPaymentRecordVo">
        select sdpol.id,sctd.name as charges_template_detail_name,concat(cb.no,"幢",cbu.no,"单元",cbue.room_number) as room_name,YEAR(sdp.create_date) as years,sdpol.daily_payment_price as paid_price,sdpo.create_date,sdpo.pay_type,sdpo.code
        from sys_daily_payment as sdp,sys_charges_template_detail as sctd,sys_daily_payment_order as sdpo,sys_daily_payment_order_list as sdpol
        ,cpm_building_unit_estate as cbue,cpm_building_unit as cbu,cpm_building as cb
        where sdp.charges_template_detail_id = sctd.id and sdp.id = sdpol.daily_payment_id and sdpo.id = sdpol.daily_payment_order_id
        and sdp.building_unit_estate_id = cbue.id and cbue.building_unit_id = cbu.id and cbu.building_id = cb.id
        and sdp.building_unit_estate_id in
        <foreach collection="list" item="estateId" open="(" separator="," close=")">
            #{estateId}
        </foreach>
        order by sdpo.create_date DESC
    </select>

    <select id="findDailPaymentOrderByCode" parameterType="java.lang.String" resultType="com.api.model.app.AppDailyPaymentOrder">
        select * from sys_daily_payment_order where code = #{outTradeNo}
    </select>
    <select id="findDailyPaymentIdsByOrderCode" parameterType="java.lang.String" resultType="java.lang.Integer">
        select sdp.id
        from sys_daily_payment as sdp,sys_daily_payment_order as sdpo,sys_daily_payment_order_list as sdpol
        where sdp.id = sdpol.daily_payment_id and sdpo.id = sdpol.daily_payment_order_id and sdpo.code = #{outTradeNo}
    </select>

    <update id="updateDPOrderStatusByCode" parameterType="com.api.model.app.AppDailyPaymentOrder">
        update sys_daily_payment_order set status = #{status} where code = #{code}
    </update>
</mapper>